from aiogram import Router, F
import httpx
from aiogram.types import CallbackQuery, BufferedInputFile
from filters.chat_type_filter import ChatTypeFilter
from api_connections.qr_api import payload, headers, url
from keyboards.inline_keyboard import loyal_card_register_menu,  review_dro_keyboard, loyal_card_menu_keyboard, \
                                      question_menu, builder_faq, move_to_menu

router = Router()
router.message.filter(
    ChatTypeFilter(chat_type=["private"])
)


@router.callback_query(F.data == 'ask')
async def ask(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text=f"‚ùì {callback_query.from_user.first_name}, –≤—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ",
        reply_markup=question_menu.adjust(1).as_markup()
    )


@router.callback_query(F.data == 'faq')
async def faq(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text=f"‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã",
        reply_markup=builder_faq.adjust(1).as_markup()
    )


@router.callback_query(F.data == 'make_a_review')
async def review(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text="–ì–¥–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤?",
        reply_markup=review_dro_keyboard.adjust(1).as_markup()
    )
# –º–æ–∂–Ω–æ –Ω–∞–≤–µ—Å—Ç–∏—Ç—å –º–∏–¥–ª–≤–∞—Ä—å, –∫–æ—Ç–æ—Ä–∞—è –¥–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å API MCRM –∏ —á–µ–∫–∞–µ—Ç —é–∑–µ—Ä–æ–≤


@router.callback_query(F.data == 'loyal_card_question')
async def loyal_card_question(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text="üí≥ –£ –í–∞—Å –µ—Å—Ç—å –∫–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏? ",
        reply_markup=loyal_card_register_menu.adjust(1).as_markup()
    )


@router.callback_query(F.data == 'loyal_card_menu')
async def loyal_card_menu(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text=f"üí≥ {callback_query.from_user.first_name}, –≤—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ",
        reply_markup=loyal_card_menu_keyboard.adjust(1).as_markup()
    )


@router.callback_query(F.data == 'get_share_qr')
async def loyal_card_menu(callback_query: CallbackQuery):
    async with httpx.AsyncClient() as client:
        response = await client.post(url, json=payload, headers=headers)
        if response.status_code == 200:
            photo = BufferedInputFile(response.content, filename='qr_mirteck')
            await callback_query.message.answer_photo(photo=photo, caption='–í–∞—à QR –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏')
        else:
            print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', response.status_code)

